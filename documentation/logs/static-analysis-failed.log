[0KRunning with gitlab-runner 16.5.0 (853330f9)[0;m
[0K  on docker-runner t7dxdYPM, system ID: r_EdOxTOzg5hT6[0;m
section_start:1700851065:prepare_executor[0K[0K[36;1mPreparing the "docker" executor[0;m[0;m
[0KUsing Docker executor with image sonarsource/sonar-scanner-cli:5.0 ...[0;m
[0KPulling docker image sonarsource/sonar-scanner-cli:5.0 ...[0;m
[0KUsing docker image sha256:2f384fb1bbd5f033fa0b628efb5ef3d40b9cafaddb68b9ffdd8c3cacdc237199 for sonarsource/sonar-scanner-cli:5.0 with digest sonarsource/sonar-scanner-cli@sha256:494ecc3b5b1ee1625bd377b3905c4284e4f0cc155cff397805a244dee1c7d575 ...[0;m
section_end:1700851074:prepare_executor[0Ksection_start:1700851074:prepare_script[0K[0K[36;1mPreparing environment[0;m[0;m
Running on runner-t7dxdypm-project-1-concurrent-0 via 014c685ddbef...
section_end:1700851075:prepare_script[0Ksection_start:1700851075:get_sources[0K[0K[36;1mGetting source from Git repository[0;m[0;m
[32;1mFetching changes...[0;m
Reinitialized existing Git repository in /builds/root/rnvako/.git/
[32;1mChecking out 107623fe as detached HEAD (ref is project)...[0;m
Removing docker-setup.sh
Removing get-docker.sh

[32;1mSkipping Git submodules setup[0;m
section_end:1700851078:get_sources[0Ksection_start:1700851078:restore_cache[0K[0K[36;1mRestoring cache[0;m[0;m
[32;1mChecking cache for static-analysis-job-protected...[0;m
No URL provided, cache will not be downloaded from shared cache server. Instead a local version of cache will be extracted.[0;m 
[32;1mSuccessfully extracted cache[0;m
section_end:1700851081:restore_cache[0Ksection_start:1700851081:step_script[0K[0K[36;1mExecuting "step_script" stage of the job script[0;m[0;m
[0KUsing docker image sha256:2f384fb1bbd5f033fa0b628efb5ef3d40b9cafaddb68b9ffdd8c3cacdc237199 for sonarsource/sonar-scanner-cli:5.0 with digest sonarsource/sonar-scanner-cli@sha256:494ecc3b5b1ee1625bd377b3905c4284e4f0cc155cff397805a244dee1c7d575 ...[0;m
[32;1m$ cd ./gateway && chmod +x ./gradlew && ./gradlew testClasses --no-daemon && cd ..[0;m
Downloading https://services.gradle.org/distributions/gradle-8.4-bin.zip
............10%............20%.............30%............40%.............50%............60%.............70%............80%.............90%............100%

Welcome to Gradle 8.4!

Here are the highlights of this release:
 - Compiling and testing with Java 21
 - Faster Java compilation on Windows
 - Role focused dependency configurations creation

For more details see https://docs.gradle.org/8.4/release-notes.html

To honour the JVM settings for this build a single-use Daemon process will be forked. For more on this, please refer to https://docs.gradle.org/8.4/userguide/gradle_daemon.html#sec:disabling_the_daemon in the Gradle documentation.
Daemon will be stopped at the end of the build 
> Task :checkKotlinGradlePluginConfigurationErrors
> Task :processResources
> Task :processTestResources NO-SOURCE
> Task :compileKotlin
> Task :compileJava NO-SOURCE
> Task :classes
> Task :compileTestKotlin
> Task :compileTestJava NO-SOURCE
> Task :testClasses UP-TO-DATE

Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

For more on this, please refer to https://docs.gradle.org/8.4/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.

BUILD SUCCESSFUL in 1m 52s
4 actionable tasks: 4 executed
[32;1m$ cd ./monitor && chmod +x ./gradlew && ./gradlew testClasses --no-daemon && cd ..[0;m
Downloading https://services.gradle.org/distributions/gradle-8.2.1-bin.zip
............10%............20%............30%.............40%............50%............60%............70%.............80%............90%............100%

Welcome to Gradle 8.2.1!

Here are the highlights of this release:
 - Kotlin DSL: new reference documentation, assignment syntax by default
 - Kotlin DSL is now the default with Gradle init
 - Improved suggestions to resolve errors in console output
 - Reduced sync memory consumption

For more details see https://docs.gradle.org/8.2.1/release-notes.html

To honour the JVM settings for this build a single-use Daemon process will be forked. For more on this, please refer to https://docs.gradle.org/8.2.1/userguide/gradle_daemon.html#sec:disabling_the_daemon in the Gradle documentation.
Daemon will be stopped at the end of the build 
> Task :compileJava
> Task :processResources
> Task :classes
> Task :compileTestJava
> Task :processTestResources NO-SOURCE
> Task :testClasses

BUILD SUCCESSFUL in 1m 17s
3 actionable tasks: 3 executed
[32;1m$ cd ./service2 && chmod +x ./gradlew && ./gradlew testClasses --no-daemon && cd ..[0;m
Downloading https://services.gradle.org/distributions/gradle-7.5.1-bin.zip
...........10%............20%...........30%............40%...........50%............60%...........70%............80%...........90%............100%

Welcome to Gradle 7.5.1!

Here are the highlights of this release:
 - Support for Java 18
 - Support for building with Groovy 4
 - Much more responsive continuous builds
 - Improved diagnostics for dependency resolution

For more details see https://docs.gradle.org/7.5.1/release-notes.html

To honour the JVM settings for this build a single-use Daemon process will be forked. See https://docs.gradle.org/7.5.1/userguide/gradle_daemon.html#sec:disabling_the_daemon.
Daemon will be stopped at the end of the build 
> Task :processResources
> Task :processTestResources NO-SOURCE
> Task :compileKotlin
> Task :compileJava NO-SOURCE
> Task :classes
> Task :compileTestKotlin
> Task :compileTestJava NO-SOURCE
> Task :testClasses UP-TO-DATE

BUILD SUCCESSFUL in 1m 56s
3 actionable tasks: 3 executed
[32;1m$ sonar-scanner[0;m
INFO: Scanner configuration file: /opt/sonar-scanner/conf/sonar-scanner.properties
INFO: Project root configuration file: /builds/root/rnvako/sonar-project.properties
INFO: SonarScanner 5.0.1.3006
INFO: Java 17.0.8 Alpine (64-bit)
INFO: Linux 5.15.90.1-microsoft-standard-WSL2 amd64
INFO: User cache: /builds/root/rnvako/.sonar/cache
INFO: Analyzing on SonarQube server 10.3.0.82913
INFO: Default locale: "en_US", source code encoding: "UTF-8" (analysis is platform dependent)
INFO: Load global settings
INFO: Load global settings (done) | time=628ms
INFO: Server id: 9B767396-AYv-Tuyp6YtZF9BbzP5a
INFO: User cache: /builds/root/rnvako/.sonar/cache
INFO: Load/download plugins
INFO: Load plugins index
INFO: Load plugins index (done) | time=345ms
INFO: Load/download plugins (done) | time=532ms
INFO: Process project properties
INFO: Process project properties (done) | time=0ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=3ms
INFO: Project key: root_rnvako_AYv-UZZq6YtZF9Bbzeig
INFO: Base dir: /builds/root/rnvako
INFO: Working dir: /builds/root/rnvako/.scannerwork
INFO: Load project settings for component key: 'root_rnvako_AYv-UZZq6YtZF9Bbzeig'
INFO: Load project settings for component key: 'root_rnvako_AYv-UZZq6YtZF9Bbzeig' (done) | time=278ms
INFO: Auto-configuring with CI 'Gitlab CI'
INFO: Load quality profiles
INFO: Load quality profiles (done) | time=734ms
INFO: Load active rules
INFO: Load active rules (done) | time=6017ms
INFO: Load analysis cache
INFO: Load analysis cache | time=45ms
INFO: Load project repositories
INFO: Load project repositories (done) | time=53ms
INFO: Indexing files...
INFO: Project configuration:
INFO: 74 files indexed
INFO: 359 files ignored because of scm ignore settings
INFO: Quality profile for docker: Sonar way
INFO: Quality profile for java: Sonar way
INFO: Quality profile for json: Sonar way
INFO: Quality profile for kotlin: Sonar way
INFO: Quality profile for xml: Sonar way
INFO: Quality profile for yaml: Sonar way
INFO: ------------- Run sensors on module root_rnvako_AYv-UZZq6YtZF9Bbzeig
INFO: Load metrics repository
INFO: Load metrics repository (done) | time=52ms
INFO: Sensor JavaSensor [java]
INFO: Server-side caching is enabled. The Java analyzer will not try to leverage data from a previous analysis.
INFO: Using ECJ batch to parse 8 Main java source files with batch size 91 KB.
INFO: Starting batch processing.
INFO: The Java analyzer cannot skip unchanged files in this context. A full analysis is performed for all files.
INFO: 100% analyzed
INFO: Batch processing: Done.
INFO: Did not optimize analysis for any files, performed a full analysis for all 8 files.
WARN: Dependencies/libraries were not provided for analysis of SOURCE files. The 'sonar.java.libraries' property is empty. Verify your configuration, as you might end up with less precise results.
WARN: Unresolved imports/types have been detected during analysis. Enable DEBUG mode to see them.
WARN: Use of preview features have been detected during analysis. Enable DEBUG mode to see them.
INFO: No "Test" source files to scan.
INFO: No "Generated" source files to scan.
INFO: Sensor JavaSensor [java] (done) | time=2171ms
INFO: Sensor JaCoCo XML Report Importer [jacoco]
INFO: 'sonar.coverage.jacoco.xmlReportPaths' is not defined. Using default locations: target/site/jacoco/jacoco.xml,target/site/jacoco-it/jacoco.xml,build/reports/jacoco/test/jacocoTestReport.xml
INFO: No report imported, no coverage information will be imported by JaCoCo XML Report Importer
INFO: Sensor JaCoCo XML Report Importer [jacoco] (done) | time=4ms
INFO: Sensor Kotlin Sensor [kotlin]
INFO: 12 source files to be analyzed
INFO: 12/12 source files have been analyzed
INFO: Sensor Kotlin Sensor [kotlin] (done) | time=5270ms
INFO: Sensor KotlinSurefireSensor [kotlin]
INFO: parsing [/builds/root/rnvako/target/surefire-reports]
INFO: Sensor KotlinSurefireSensor [kotlin] (done) | time=3ms
INFO: Sensor IaC CloudFormation Sensor [iac]
INFO: 0 source files to be analyzed
INFO: 0/0 source files have been analyzed
INFO: Sensor IaC CloudFormation Sensor [iac] (done) | time=31ms
INFO: Sensor IaC Kubernetes Sensor [iac]
INFO: 0 source files to be analyzed
INFO: 0/0 source files have been analyzed
INFO: Sensor IaC Kubernetes Sensor [iac] (done) | time=13ms
INFO: Sensor IaC AzureResourceManager Sensor [iac]
INFO: 0 source files to be analyzed
INFO: 0/0 source files have been analyzed
INFO: Sensor IaC AzureResourceManager Sensor [iac] (done) | time=110ms
INFO: Sensor JavaScript inside YAML analysis [javascript]
INFO: No input files found for analysis
INFO: Hit the cache for 0 out of 0
INFO: Miss the cache for 0 out of 0
INFO: Sensor JavaScript inside YAML analysis [javascript] (done) | time=14ms
INFO: Sensor CSS Rules [javascript]
INFO: No CSS, PHP, HTML or VueJS files are found in the project. CSS analysis is skipped.
INFO: Sensor CSS Rules [javascript] (done) | time=1ms
INFO: Sensor C# Project Type Information [csharp]
INFO: Sensor C# Project Type Information [csharp] (done) | time=2ms
INFO: Sensor C# Analysis Log [csharp]
INFO: Sensor C# Analysis Log [csharp] (done) | time=30ms
INFO: Sensor C# Properties [csharp]
INFO: Sensor C# Properties [csharp] (done) | time=0ms
INFO: Sensor SurefireSensor [java]
INFO: parsing [/builds/root/rnvako/target/surefire-reports]
INFO: Sensor SurefireSensor [java] (done) | time=2ms
INFO: Sensor HTML [web]
INFO: Sensor HTML [web] (done) | time=4ms
INFO: Sensor XML Sensor [xml]
INFO: 2 source files to be analyzed
INFO: 2/2 source files have been analyzed
INFO: Sensor XML Sensor [xml] (done) | time=198ms
INFO: Sensor TextAndSecretsSensor [text]
INFO: 41 source files to be analyzed
INFO: 41/41 source files have been analyzed
INFO: Sensor TextAndSecretsSensor [text] (done) | time=1024ms
INFO: Sensor VB.NET Project Type Information [vbnet]
INFO: Sensor VB.NET Project Type Information [vbnet] (done) | time=1ms
INFO: Sensor VB.NET Analysis Log [vbnet]
INFO: Sensor VB.NET Analysis Log [vbnet] (done) | time=28ms
INFO: Sensor VB.NET Properties [vbnet]
INFO: Sensor VB.NET Properties [vbnet] (done) | time=0ms
INFO: Sensor IaC Docker Sensor [iac]
INFO: 8 source files to be analyzed
INFO: 8/8 source files have been analyzed
INFO: Sensor IaC Docker Sensor [iac] (done) | time=167ms
INFO: ------------- Run sensors on project
INFO: Sensor Analysis Warnings import [csharp]
INFO: Sensor Analysis Warnings import [csharp] (done) | time=2ms
INFO: Sensor Zero Coverage Sensor
INFO: Sensor Zero Coverage Sensor (done) | time=24ms
INFO: Sensor Java CPD Block Indexer
INFO: Sensor Java CPD Block Indexer (done) | time=33ms
INFO: SCM Publisher SCM provider for this project is: git
INFO: SCM Publisher 5 source files to be analyzed
INFO: SCM Publisher 5/5 source files have been analyzed (done) | time=290ms
INFO: CPD Executor 4 files had no CPD blocks
INFO: CPD Executor Calculating CPD for 16 files
INFO: CPD Executor CPD calculation finished (done) | time=26ms
INFO: Analysis report generated in 93ms, dir size=225.5 kB
INFO: Analysis report compressed in 90ms, zip size=90.3 kB
INFO: Analysis report uploaded in 92ms
INFO: ------------- Check Quality Gate status
INFO: Waiting for the analysis report to be processed (max 300s)
INFO: ------------------------------------------------------------------------
INFO: EXECUTION FAILURE
INFO: ------------------------------------------------------------------------
INFO: Total time: 41.330s
INFO: Final Memory: 34M/120M
INFO: ------------------------------------------------------------------------
ERROR: Error during SonarScanner execution
ERROR: QUALITY GATE STATUS: FAILED - View details on http://sonarqube:9000/dashboard?id=root_rnvako_AYv-UZZq6YtZF9Bbzeig
ERROR: 
ERROR: Re-run SonarScanner using the -X switch to enable full debug logging.
section_end:1700851433:step_script[0K[31;1mERROR: Job failed: exit code 1
[0;m
